"""Initial DB build

Revision ID: 508568dd8957
Revises: None
Create Date: 2014-06-08 14:15:28.235998

"""

# revision identifiers, used by Alembic.
revision = '508568dd8957'
down_revision = None

import json
import os
import sys

sys.path.append(os.path.join(os.path.dirname(__file__), os.pardir, os.pardir))

from alembic import op
import sqlalchemy as sa

from impression.models import Setting

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=True),
    sa.Column('email', sa.String(length=200), nullable=True),
    sa.Column('openid', sa.String(length=200), nullable=True),
    sa.Column('password', sa.String(length=200), nullable=True),
    sa.Column('admin', sa.Boolean(), server_default='0', nullable=True),
    sa.Column('active', sa.Boolean(), server_default='1', nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('api_keys',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('key', sa.VARCHAR(length=512), nullable=True),
    sa.Column('name', sa.VARCHAR(length=512), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('settings',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), nullable=False),
    sa.Column('human_name', sa.TEXT(), server_default='', nullable=True),
    sa.Column('value', sa.TEXT(), server_default='', nullable=True),
    sa.Column('vartype', sa.Enum('int', 'str', 'bool', 'float'), nullable=False),
    sa.Column('allowed', sa.Text(), nullable=True),
    sa.Column('system', sa.Boolean(), server_default='0', nullable=True),
    sa.Column('description', sa.TEXT(), server_default='', nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role_types',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('files',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('name', sa.VARCHAR(length=256), nullable=False),
    sa.Column('path', sa.VARCHAR(length=512), nullable=True),
    sa.Column('thumbnail_name', sa.VARCHAR(length=256), nullable=True),
    sa.Column('thumbnail_path', sa.VARCHAR(length=512), nullable=True),
    sa.Column('width', sa.Integer(), server_default='0', nullable=True),
    sa.Column('height', sa.Integer(), server_default='0', nullable=True),
    sa.Column('size', sa.Integer(), server_default='0', nullable=True),
    sa.Column('user_id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('mimetype', sa.VARCHAR(length=256), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('logs',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('action', sa.VARCHAR(length=5120), nullable=True),
    sa.Column('user_id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('content',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('title', sa.VARCHAR(length=512), nullable=True),
    sa.Column('type', sa.Enum('post', 'page'), nullable=False),
    sa.Column('parser', sa.Enum('markdown', 'html', 'textile', 'mediawiki'), nullable=False),
    sa.Column('url', sa.VARCHAR(length=256), nullable=True),
    sa.Column('header_image', sa.VARCHAR(length=256), nullable=True),
    sa.Column('preview', sa.TEXT(), nullable=True),
    sa.Column('slug', sa.VARCHAR(length=512), nullable=True),
    sa.Column('body', sa.TEXT(), nullable=True),
    sa.Column('tags', sa.TEXT(), nullable=True),
    sa.Column('menu_item', sa.Boolean(), server_default='0', nullable=True),
    sa.Column('template', sa.VARCHAR(length=256), nullable=True),
    sa.Column('user_id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('published', sa.Boolean(), server_default='0', nullable=True),
    sa.Column('published_on', sa.DateTime(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('role_type_id', sa.VARCHAR(length=36), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['role_type_id'], ['role_types.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('custom_fields',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('content_id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('type', sa.VARCHAR(length=64), nullable=False),
    sa.Column('key', sa.VARCHAR(length=256), nullable=False),
    sa.Column('value', sa.TEXT(), nullable=False),
    sa.Column('sort_order', sa.Integer(), server_default='1000', nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['content_id'], ['content.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###

    # Available Themes
    themes = ['Stock Bootstrap 3', 'amelia', 'cerulean', 'cosmo', 'cyborg', 'darkly', 'flatly', 'lumen', 'readable', 'simplex', 'slate', 'spacelab', 'superhero', 'united', 'yeti']
    syntax_themes = ['autumn.css', 'borland.css', 'bw.css', 'colorful.css', 'default.css', 'emacs.css', 'friendly.css', 'fruity.css', 'github.css', 'manni.css', 'monokai.css', 'murphy.css', 'native.css', 'pastie.css', 'perldoc.css', 'tango.css', 'trac.css', 'vim.css', 'vs.css', 'zenburn.css']

    # Create some system settings
    Setting(name='blog-title', vartype='str', system=True).insert()
    Setting(name='blog-copyright', vartype='str', system=True).insert()
    Setting(name='cache-timeout', vartype='int', system=True, value=0).insert()
    Setting(name='posts-per-page', vartype='int', system=True, value=4).insert()
    Setting(name='bootstrap-theme', vartype='str', system=True, value='yeti', allowed=json.dumps(themes)).insert()
    Setting(name='syntax-highlighting-theme', vartype='str', system=True, value='monokai.css', allowed=json.dumps(syntax_themes)).insert()
    Setting(name='custom-front-page', vartype='str', system=True).insert()


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('custom_fields')
    op.drop_table('user_roles')
    op.drop_table('content')
    op.drop_table('logs')
    op.drop_table('files')
    op.drop_table('role_types')
    op.drop_table('settings')
    op.drop_table('api_keys')
    op.drop_table('tags')
    op.drop_table('users')
    ### end Alembic commands ###
    # Create some system settings

    setting = Setting.filter(Setting.name == 'blog-title').first()
    if setting:
        setting.delete()
    setting = Setting.filter(Setting.name == 'blog-copyright')
    if setting:
        setting.delete()
    setting = Setting.filter(Setting.name == 'cache-timeout')
    if setting:
        setting.delete()
    setting = Setting.filter(Setting.name == 'posts-per-page')
    if setting:
        setting.delete()
    setting = Setting.filter(Setting.name == 'bootstrap-theme')
    if setting:
        setting.delete()
    setting = Setting.filter(Setting.name == 'syntax-highlighting-theme')
    if setting:
        setting.delete()
    setting = Setting.filter(Setting.name == 'custom-front-page')
    if setting:
        setting.delete()
